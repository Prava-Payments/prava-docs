{
  "openapi": "3.1.0",
  "info": {
    "title": "Prava Payments API Reference",
    "description": "API reference for the Prava platform.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://sandbox-api.prava.space/v1"
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/customers/{customer_id}/merchants/{merchant_id}/carts": {
      "post": {
        "summary": "Create a Cart",
        "description": "Creates a new cart for a customer with items from a specific merchant.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "merchant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A unique key for the request to ensure idempotency."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCartBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cart created successfully.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "cart_id": "c1b2a3d4-e5f6-7890-1234-567890abcdef",
                    "customer_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "merchant_id": "m1e2r3c4-h5a6-n7t8-9012-3456789abcde",
                    "items": [
                      {
                        "product_id": "p1r2o3d4-u5c6-t7s8-9012-3456789abcde",
                        "qty": 1
                      }
                    ],
                    "status": "open",
                    "created_at": "2025-10-15T05:36:43.000Z",
                    "updated_at": "2025-10-15T05:36:43.000Z"
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z",
                    "idempotency_key": "ee461e0f-1808-4018-9ee1-2744a8e822f7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid quantity.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "INVALID_QUANTITY",
                    "message": "Insufficient inventory for product Example Product",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer, Merchant, or Product not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/carts": {
      "get": {
        "summary": "Get Customer Carts",
        "description": "Retrieves all carts for a specific customer.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of carts.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "count": 1,
                    "carts": [
                      {
                        "cart_id": "c1b2a3d4-e5f6-7890-1234-567890abcdef",
                        "merchant_id": "m1e2r3c4-h5a6-n7t8-9012-3456789abcde",
                        "status": "open",
                        "created_at": "2025-10-15T05:36:43.000Z",
                        "updated_at": "2025-10-15T05:36:43.000Z"
                      }
                    ]
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/carts/{cart_id}": {
      "get": {
        "summary": "Get a Cart",
        "description": "Retrieves a specific cart for a customer.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested cart.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "cart_id": "c1b2a3d4-e5f6-7890-1234-567890abcdef",
                    "customer_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "merchant_id": "m1e2r3c4-h5a6-n7t8-9012-3456789abcde",
                    "products": [
                      {
                        "product_id": "p1r2o3d4-u5c6-t7s8-9012-3456789abcde",
                        "name": "Example Product",
                        "description": "This is an example product.",
                        "price": "10.00",
                        "currency": "USD",
                        "quantity": 1,
                        "item_total": "10.00",
                        "image_url": "https://example.com/product.jpg"
                      }
                    ],
                    "total_amount": "10.00",
                    "currency": "USD",
                    "status": "open",
                    "created_at": "2025-10-15T05:36:43.000Z",
                    "updated_at": "2025-10-15T05:36:43.000Z"
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer or Cart not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cart_id}": {
      "patch": {
        "summary": "Update a Cart",
        "description": "Updates a cart by adding or removing items.",
        "parameters": [
          {
            "name": "cart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cart updated successfully.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "cart_id": "c1b2a3d4-e5f6-7890-1234-567890abcdef",
                    "customer_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "merchant_id": "m1e2r3c4-h5a6-n7t8-9012-3456789abcde",
                    "status": "open",
                    "created_at": "2025-10-15T05:36:43.000Z",
                    "updated_at": "2025-10-15T05:38:00.000Z"
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:38:00.000Z",
                    "idempotency_key": "ee461e0f-1808-4018-9ee1-2744a8e822f7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "VALIDATION_ERROR",
                    "message": "Product p1r2o3d4-u5c6-t7s8-9012-3456789abcde not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CART_NOT_FOUND",
                    "message": "Cart not found or not accessible",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/carts/{cart_id}/order/wallet/{wallet_id}": {
      "post": {
        "summary": "Create an Order from a Cart",
        "description": "Creates an order from a specific cart using a customer's wallet.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cart_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "wallet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A unique key for the request to ensure idempotency."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "order_id": "o1r2d3e4-r5d6-e7r8-9012-3456789abcde",
                    "cart_id": "c1b2a3d4-e5f6-7890-1234-567890abcdef",
                    "customer_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "wallet_id": "f0e1d2c3-b4a5-6789-0123-456789abcdef",
                    "status": "processing",
                    "amount": "10.00",
                    "currency": "USD",
                    "address_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "created_at": "2025-10-15T05:40:12.000Z",
                    "updated_at": "2025-10-15T05:40:12.000Z"
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:40:12.000Z",
                    "idempotency_key": "ee461e0f-1808-4018-9ee1-2744a8e822f7"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error or insufficient funds.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "INSUFFICIENT_FUNDS",
                    "message": "Insufficient funds",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "post": {
        "summary": "Create a Customer",
        "description": "Creates a new customer and a wallet for them.",
        "parameters": [
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A unique key for the request to ensure idempotency."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer created successfully.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "type": "individual",
                    "status": "pending",
                    "first_name": "John",
                    "last_name": "Doe",
                    "email": "john.doe@example.com",
                    "created_at": "2025-10-15T05:36:43.000Z",
                    "updated_at": "2025-10-15T05:36:43.000Z"
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z",
                    "idempotency_key": "ee461e0f-1808-4018-9ee1-2744a8e822f7"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Customer with this email already exists.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_EXISTS",
                    "message": "Customer with this email already exists",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Customers",
        "description": "Retrieves a list of customers for the developer.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of customers.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "count": 1,
                    "data": [
                      {
                        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                        "type": "individual",
                        "status": "verified",
                        "first_name": "John",
                        "last_name": "Doe",
                        "email": "john.doe@example.com",
                        "has_accepted_terms_of_service": true,
                        "created_at": "2025-10-15T05:36:43.000Z",
                        "updated_at": "2025-10-15T05:36:43.000Z"
                      }
                    ]
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z",
                    "pagination": {
                      "page": 1,
                      "page_size": 20,
                      "total_count": 1,
                      "has_more": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/address": {
      "post": {
        "summary": "Create or Update a Customer Address",
        "description": "Creates a new address for a customer, or updates an existing one.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A unique key for the request to ensure idempotency."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerAddressBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address created or updated successfully.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "address_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                    "customer_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "status": "updated",
                    "created_at": "2025-10-15T05:36:43.000Z",
                    "updated_at": "2025-10-15T05:36:43.000Z"
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z",
                    "idempotency_key": "ee461e0f-1808-4018-9ee1-2744a8e822f7"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Customer Addresses",
        "description": "Retrieves all addresses for a specific customer.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of addresses.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "address_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
                      "customer_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                      "name": "Home",
                      "address": "123 Main St",
                      "city": "Anytown",
                      "state": "CA",
                      "postal_code": "12345",
                      "country": "US",
                      "contact_information": "555-1234",
                      "created_at": "2025-10-15T05:36:43.000Z",
                      "updated_at": "2025-10-15T05:36:43.000Z"
                    }
                  ],
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/wallets": {
      "get": {
        "summary": "Get Customer Wallets",
        "description": "Retrieves all wallets for a specific customer.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of wallets.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "count": 1,
                    "data": [
                      {
                        "wallet_id": "f0e1d2c3-b4a5-6789-0123-456789abcdef",
                        "balance": {
                          "currency": "USD",
                          "amount": "100.00"
                        },
                        "created_at": "2025-10-15T05:36:43.000Z",
                        "updated_at": "2025-10-15T05:36:43.000Z"
                      }
                    ]
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/wallets/{wallet_id}": {
      "get": {
        "summary": "Get a Wallet",
        "description": "Retrieves a specific wallet for a customer.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "wallet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A unique key for the request to ensure idempotency."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested wallet.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "wallet_id": "f0e1d2c3-b4a5-6789-0123-456789abcdef",
                    "customer_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                    "balance": {
                      "currency": "USD",
                      "amount": "100.00"
                    },
                    "updated_at": "2025-10-15T05:36:43.000Z"
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer or Wallet not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customer_id}/wallets/{wallet_id}/deposit": {
      "post": {
        "summary": "Deposit to Wallet (Staging Only)",
        "description": "Deposits funds into a customer's wallet. This endpoint is only available in the sandbox environment.",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "wallet_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A unique key for the request to ensure idempotency."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepositToWalletBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deposit successful.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "wallet_balance": {
                      "currency": "USD",
                      "amount": "150.00"
                    }
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z",
                    "idempotency_key": "ee461e0f-1808-4018-9ee1-2744a8e822f7"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Operation not allowed in production.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "OPERATION_NOT_ALLOWED",
                    "message": "Direct deposits not allowed in production",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer or Wallet not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "CUSTOMER_NOT_FOUND",
                    "message": "Customer not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/merchants/category/{category_code}": {
      "get": {
        "summary": "Get Merchants by Category",
        "description": "Retrieves a list of merchants by category. example codes: `clothing`, `electronics`, `home_goods`, `books`, `gourmet_food`",
        "parameters": [
          {
            "name": "category_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of merchants.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "count": 1,
                    "merchants": [
                      {
                        "merchant_id": "m1e2r3c4-h5a6-n7t8-9012-3456789abcde",
                        "name": "Example Merchant",
                        "category_code": "electronics",
                        "description": "Your one-stop shop for electronics.",
                        "logo_url": "https://example.com/logo.png"
                      }
                    ]
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z",
                    "pagination": {
                      "page": 1,
                      "page_size": 20,
                      "total_count": 1,
                      "has_more": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/merchants/{merchant_id}/products/{product_category_id}": {
      "get": {
        "summary": "Get Merchant Products",
        "description": "Retrieves a list of products for a specific merchant and product category. Example product category ids: `televisions`, `audio`, `computers`, `accessories`, `jackets`, `pants`, `shirts` etc",
        "parameters": [
          {
            "name": "merchant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "product_category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of products.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "merchant_id": "m1e2r3c4-h5a6-n7t8-9012-3456789abcde",
                    "category_code": "laptops",
                    "products": [
                      {
                        "product_id": "p1r2o3d4-u5c6-t7s8-9012-3456789abcde",
                        "name": "Example Laptop",
                        "description": "A powerful and lightweight laptop.",
                        "price": "1200.00",
                        "currency": "USD",
                        "inventory": 50,
                        "image_url": "https://example.com/laptop.jpg"
                      }
                    ]
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Merchant not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "MERCHANT_NOT_FOUND",
                    "message": "Merchant not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/merchants/products/{product_id}": {
      "get": {
        "summary": "Get a Product",
        "description": "Retrieves a specific product.",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested product.",
            "content": {
              "application/json": {
                "example": {
                  "data": {
                    "product_id": "p1r2o3d4-u5c6-t7s8-9012-3456789abcde",
                    "name": "Example Laptop",
                    "description": "A powerful and lightweight laptop.",
                    "category": "laptops",
                    "price": "1200.00",
                    "currency": "USD",
                    "inventory": 50,
                    "merchant": {
                      "merchant_id": "m1e2r3c4-h5a6-n7t8-9012-3456789abcde",
                      "name": "Example Merchant",
                      "category_code": "electronics"
                    },
                    "images": [
                      "https://example.com/laptop_front.jpg",
                      "https://example.com/laptop_side.jpg"
                    ]
                  },
                  "meta": {
                    "request_id": "req_12345",
                    "timestamp": "2025-10-15T05:36:43.000Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API Key.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "UNAUTHORIZED",
                    "message": "Authentication required",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found.",
            "content": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "PRODUCT_NOT_FOUND",
                    "message": "Product not found",
                    "request_id": "req_12345"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateCartBody": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "string",
              "format": "uuid"
            },
            "qty": {
              "type": "integer"
            }
          }
        }
      },
      "UpdateCartBody": {
        "type": "object",
        "properties": {
          "add": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "product_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "qty": {
                  "type": "integer"
                }
              }
            }
          },
          "remove": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "CreateOrderBody": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateCustomerBody": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "signed_agreement_id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "birth_date": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "street_line_1": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "subdivision": {
                "type": "string"
              },
              "postal_code": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        }
      },
      "CreateCustomerAddressBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "contact_information": {
            "type": "object",
            "properties": {
              "phone": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        }
      },
      "DepositToWalletBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          }
        }
      },
      "RotateApiKeyBody": {
        "type": "object",
        "properties": {
          "old_key_id": {
            "type": "string",
            "format": "uuid"
          },
          "grace_hours": {
            "type": "integer"
          }
        }
      },
      "CreateDeveloperBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "Api-Key"
      }
    }
  }
}
